{"version":3,"sources":["components/UI/LoadingSpinner.js","components/layout/MainNavigation.module.css","hooks/use-http.js","lib/api.js","components/comments/NewCommentForm.module.css","components/comments/Comments.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/layout/MainNavigation.jsx","components/layout/Layout.jsx","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","length","onClick","MainNavigation","header","logo","nav","to","navData","isActive","active","Layout","main","children","AllQuotes","React","lazy","NewQuote","QuoteDetail","NotFound","App","fallback","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0136a1af.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-1a302-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.id });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { id } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(id);\n  }, [id, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          id={id}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { NavLink } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink\n              to=\"/quotes\"\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\n            >\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/new-quote\"\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\n            >\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import classes from \"./Layout.module.css\";\nimport MainNavigation from './MainNavigation'\n\nconst Layout = (props) => {\n  return (\n    <>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { Suspense } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport Comments from \"./components/comments/Comments\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst AllQuotes = React.lazy(() => import(\"./pages/AllQuotes\"));\nconst NewQuote = React.lazy(() => import(\"./pages/NewQuote\"));\nconst QuoteDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\n\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Routes>\n          <Route path=\"/\" element={<Navigate to=\"/quotes\" />} />\n          <Route path=\"/quotes\" element={<AllQuotes />} />\n          <Route path=\"/quotes/:id/*\" element={<QuoteDetail />}>\n            <Route path=\"comments\" element={<Comments />} />\n          </Route>\n          <Route path=\"/new-quote\" element={<NewQuote />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter><App /></BrowserRouter>);\n"],"sourceRoot":""}