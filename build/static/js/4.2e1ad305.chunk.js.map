{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.jsx"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","NewQuote","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","addQuoteHandler","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,mB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2B,iGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,UAC7C,E,yBC0DcC,EAvDG,SAACL,GAGjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,mCAEE,cAAC,EAAD,UAEE,uBAAMN,UAAWC,IAAQO,KAAMC,SAxBrC,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBP,EAAeQ,QAAQC,MACvCC,EAAcR,EAAaM,QAAQC,MAIzCf,EAAMiB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAeK,UACGhB,EAAMoB,WACL,qBAAKnB,UAAWC,IAAQmB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKrB,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKrB,OAEtC,sBAAKL,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKnB,OAEpC,qBAAKP,UAAWC,IAAQ2B,QAAxB,SAEE,wBAAQ5B,UAAU,MAAlB,+BAMX,E,gBChCc6B,UAtBE,WACf,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OACdC,EAAWC,cAEjBC,qBAAU,WACO,cAAXH,GACFC,EAAS,UAEZ,GAAE,CAACD,EAAQC,IAEZ,IAAMG,EAAe,iDAAG,WAAOC,GAAP,2EACtBN,EAAYM,GADU,2CAAH,sDAKrB,OACE,8BACE,cAAC,EAAD,CAAWnB,UAAsB,YAAXc,EAAsBjB,WAAYqB,KAG7D,C","file":"static/js/4.2e1ad305.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from 'react';\n// import { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  // const [isEntering, setIsEntering] = useState(false)\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  // const addQuoteHandler = () => {\n  //   setIsEntering(false)\n  // }\n\n  // const formFocusHandler = () => {\n  //   setIsEntering(true)\n  // }\n\n  return (\n    <>\n      {/* <Prompt when={isEntering} message={()=> 'Are you sure you want to leave? You will lose entered data.'} /> */}\n      <Card>\n        {/* <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}> */}\n        <form className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n          {/* ?<button onClick={addQuoteHandler} className='btn'>Add Quote</button> */}\n            <button className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport QuoteForm from '../components/quotes/QuoteForm'\nimport useHttp from '../hooks/use-http'\nimport { addQuote } from '../lib/api'\n\nconst NewQuote = () => {\n  const {sendRequest, status} = useHttp(addQuote)\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (status === 'completed') {\n      navigate('/quotes')\n    }\n  }, [status, navigate])\n\n  const addQuoteHandler = async (quoteData) => {\n    sendRequest(quoteData)\n  }\n\n\n  return (\n    <div>\n      <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\n    </div>\n  )\n}\n\nexport default NewQuote\n"],"sourceRoot":""}